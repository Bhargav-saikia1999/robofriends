{"version":3,"sources":["Containers/spinner.gif","reducers.js","store.js","constants.js","Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundary.js","Containers/App.js","actions.js","serviceWorker.js","index.js"],"names":["module","exports","initialStateSearch","search","initialStateRobots","isPending","robots","error","rootReducer","combineReducers","searchRobots","state","action","type","payload","getRobots","store","createStore","applyMiddleware","thunkMiddleware","Card","props","className","src","name","alt","email","CardList","searchList","filter","robot","username","toLowerCase","includes","value","map","i","key","id","SearchBox","aria-label","placeholder","onChange","e","changeHandler","autoFocus","Scroll","style","overflow","overflowX","border","height","children","ErrorBoundary","hasError","info","this","setState","Component","connect","dispatch","searchHandler","event","target","request","fetch","then","res","json","data","catch","err","useEffect","spinner","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f972695d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.235b9b3e.gif\";","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCCESS,\r\n  REQUEST_ROBOTS_FAILED,\r\n} from \"./constants\";\r\n\r\nconst initialStateSearch = {\r\n  search: \"\",\r\n};\r\n\r\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\r\n  switch (action.type) {\r\n    case CHANGE_SEARCH_FIELD:\r\n      return { ...state, search: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStateRobots = {\r\n  isPending: false,\r\n  robots: [],\r\n  error: \"\",\r\n};\r\n\r\nexport const getRobots = (state = initialStateRobots, action = {}) => {\r\n  switch (action.type) {\r\n    case REQUEST_ROBOTS_PENDING:\r\n      return { ...state, isPending: true };\r\n    case REQUEST_ROBOTS_SUCCESS:\r\n      return { ...state, isPending: false, robots: action.payload };\r\n    case REQUEST_ROBOTS_FAILED:\r\n      return { ...state, isPending: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { searchRobots, getRobots } from \"./reducers\";\r\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nconst rootReducer = combineReducers({\r\n  searchRobots: searchRobots,\r\n  getRobots: getRobots,\r\n});\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n","export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\r\n\r\nexport const REQUEST_ROBOTS_PENDING = \"REQUEST_ROBOTS_PENDING\";\r\nexport const REQUEST_ROBOTS_SUCCESS = \"REQUEST_ROBOTS_SUCCESS\";\r\nexport const REQUEST_ROBOTS_FAILED = \"REQUEST_ROBOTS_FAILED\";\r\n","import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className=\"tc bg-light-green dib ma2 pa3 br3 grow bw2 shadow-5\">\r\n      <img\r\n        src={`https://robohash.org/${props.name}?size=200x200`}\r\n        alt={`avatar_of_${props.name}`}\r\n      />\r\n      <div>\r\n        <h2>{props.name}</h2>\r\n        <p>{props.email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = (props) => {\r\n  const searchList = props.robots.filter((robot) => {\r\n    return robot.username.toLowerCase().includes(props.value.toLowerCase());\r\n  });\r\n  return (\r\n    <div className=\"pa4 cardList\">\r\n      {props.value === \"\"\r\n        ? props.robots.map((robot, i) => {\r\n            return (\r\n              <Card name={robot.username} email={robot.email} key={robot.id} />\r\n            );\r\n          })\r\n        : searchList.map((robot, i) => {\r\n            return (\r\n              <Card name={robot.username} email={robot.email} key={robot.id} />\r\n            );\r\n          })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = (props) => {\r\n  return (\r\n    <div className=\"tc ma3\">\r\n      <input\r\n        aria-label=\"Search Box\"\r\n        className=\"search-box\"\r\n        type=\"search\"\r\n        placeholder=\"Search Robots\"\r\n        onChange={(e) => props.changeHandler(e)}\r\n        value={props.value}\r\n        autoFocus={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflow: \"scroll\",\r\n        overflowX: \"hidden\",\r\n        border: \"0.8px solid #007546\",\r\n        height: \"68.5vh\",\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1 className=\"error-text\">Sorry, Something went wrong !</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, { useEffect } from \"react\";\r\nimport CardList from \"../Components/CardList\";\r\nimport spinner from \"./spinner.gif\";\r\n// import { robots } from \"./robots\";\r\nimport { connect } from \"react-redux\";\r\nimport SearchBox from \"../Components/SearchBox\";\r\nimport Scroll from \"../Components/Scroll\";\r\nimport ErrorBoundary from \"../Components/ErrorBoundary\";\r\n\r\nimport { setSearchField, request } from \"../actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    search: state.searchRobots.search,\r\n    robots: state.getRobots.robots,\r\n    isPending: state.getRobots.isPending,\r\n    error: state.getRobots.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    searchHandler: (event) => dispatch(setSearchField(event.target.value)),\r\n    request: () => dispatch(request()),\r\n  };\r\n};\r\n\r\nconst App = (props) => {\r\n  const { searchHandler, search, robots, request, isPending } = props;\r\n\r\n  useEffect(() => {\r\n    request();\r\n  }, [request]);\r\n\r\n  return (\r\n    <div className=\"tc\">\r\n      <h1 className=\"tc title-font\">Robofriends</h1>\r\n      <SearchBox value={search} changeHandler={searchHandler} />\r\n      {isPending ? (\r\n        <div className=\"loading-div\">\r\n          <img src={spinner} alt=\"loading\" className=\"loading\" />\r\n        </div>\r\n      ) : (\r\n        <Scroll>\r\n          <ErrorBoundary>\r\n            <CardList value={search} robots={robots} />\r\n          </ErrorBoundary>\r\n        </Scroll>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\n// const [search, setSearch] = useState(\"\");\r\n// const [robots, setRobots] = useState([]);\r\n\r\n// fetch(`https://jsonplaceholder.typicode.com/users`)\r\n//   .then((res) => res.json())\r\n//   .then((data) => {\r\n//     // console.log(data);\r\n//     setRobots(data);\r\n//   });\r\n\r\n// const searchHandler = (e) => {\r\n//   const val = e.target.value;\r\n//   setSearch(val);\r\n// };\r\n","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCCESS,\r\n  REQUEST_ROBOTS_FAILED,\r\n} from \"./constants\";\r\n\r\nexport const setSearchField = (text) => ({\r\n  type: CHANGE_SEARCH_FIELD,\r\n  payload: text,\r\n});\r\n\r\nexport const request = () => (dispatch) => {\r\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\r\n  fetch(`https://jsonplaceholder.typicode.com/users`)\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data });\r\n    })\r\n    .catch((err) => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: err }));\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport App from \"./Containers/App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"tachyons\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}